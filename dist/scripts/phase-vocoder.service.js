"use strict";(()=>{var N={},o,_=null;function j(){return(_===null||_.byteLength===0)&&(_=new Uint8Array(o.memory.buffer)),_}function C(s,t){return s=s>>>0,j().subarray(s/1,s/1+t)}var u=new Array(128).fill(void 0);u.push(void 0,null,!0,!1);function g(s){return u[s]}var y=u.length;function R(s){s<132||(u[s]=y,y=s)}function U(s){let t=g(s);return R(s),t}var b=null;function k(){return(b===null||b.byteLength===0)&&(b=new Float32Array(o.memory.buffer)),b}var w=0;function m(s,t){let e=t(s.length*4,4)>>>0;return k().set(s,e/4),w=s.length,e}function L(s){y===u.length&&u.push(u.length+1);let t=y;return y=u[t],u[t]=s,t}var l=null;function O(){return(l===null||l.buffer.detached===!0||l.buffer.detached===void 0&&l.buffer!==o.memory.buffer)&&(l=new DataView(o.memory.buffer)),l}function E(s,t){return s=s>>>0,k().subarray(s/4,s/4+t)}function S(s,t,e,n,r){try{let d=o.__wbindgen_add_to_stack_pointer(-16);var i=m(s,o.__wbindgen_malloc),f=w;let z=m(t,o.__wbindgen_malloc),F=w,M=m(e,o.__wbindgen_malloc),T=w;o.process_ola(d,i,f,L(s),z,F,M,T,n,r);var a=O().getInt32(d+4*0,!0),c=O().getInt32(d+4*1,!0),W=E(a,c).slice();return o.__wbindgen_free(a,c*4,4),W}finally{o.__wbindgen_add_to_stack_pointer(16)}}var D=null;async function H(s,t){if(typeof Response=="function"&&s instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(s,t)}catch(n){if(s.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",n);else throw n}let e=await s.arrayBuffer();return await WebAssembly.instantiate(e,t)}else{let e=await WebAssembly.instantiate(s,t);return e instanceof WebAssembly.Instance?{instance:e,module:s}:e}}function V(){let s={};return s.wbg={},s.wbg.__wbindgen_copy_to_typed_array=function(t,e,n){new Uint8Array(g(n).buffer,g(n).byteOffset,g(n).byteLength).set(C(t,e))},s.wbg.__wbindgen_object_drop_ref=function(t){U(t)},s}function P(s,t){return o=s.exports,v.__wbindgen_wasm_module=t,l=null,b=null,D=null,_=null,o}async function v(s){if(o!==void 0)return o;typeof s<"u"&&Object.getPrototypeOf(s)===Object.prototype?{module_or_path:s}=s:console.warn("using deprecated parameters for the initialization function; pass a single object instead"),typeof s>"u"&&(s=new URL("wasm_fft_bg.wasm",N.url));let t=V();(typeof s=="string"||typeof Request=="function"&&s instanceof Request||typeof URL=="function"&&s instanceof URL)&&(s=fetch(s));let{instance:e,module:n}=await H(await s,t);return P(e,n)}var I=v;function q(s){let t=new Float32Array(s);for(let e=0;e<s;++e)t[e]=.5*(1-Math.cos(2*Math.PI*e/s));return t}function K(s){let t=new Float32Array(s<<1);for(let e=0;e<s;e+=2){let n=Math.PI*e/s,r=Math.cos(n),i=Math.sin(n);t[e]=r,t[e+1]=i}return t}var Z=8192,p=128,h=1024,A=class s extends AudioWorkletProcessor{constructor(t){super(t),this.nbInputs=t.numberOfInputs,this.nbOutputs=t.numberOfOutputs,this.blockSize=t.processorOptions.blockSize,this.hopSize=p,this.nbOverlaps=this.blockSize/h,this.processOverlap=h/p,this.processCounter=0,this.inputBuffers=new Array(this.nbInputs),this.inputBuffersHead=new Array(this.nbInputs),this.inputBuffersToSend=new Array(this.nbInputs);for(let e=0;e<this.nbInputs;++e)this.allocateInputChannels(e,1);this.outputBuffers=new Array(this.nbOutputs),this.outputBuffersToRetrieve=new Array(this.nbOutputs);for(let e=0;e<this.nbOutputs;++e)this.allocateOutputChannels(e,1)}reallocateChannelsIfNeeded(t,e){for(let n=0;n<this.nbInputs;++n){let r=t[n].length;r!=this.inputBuffers[n].length&&this.allocateInputChannels(n,r)}for(let n=0;n<this.nbOutputs;++n){let r=e[n].length;r!=this.outputBuffers[n].length&&this.allocateOutputChannels(n,r)}}allocateInputChannels(t,e){this.inputBuffers[t]=new Array(e),this.inputBuffersHead[t]=new Array(e),this.inputBuffersToSend[t]=new Array(e);for(let n=0;n<e;++n)this.inputBuffers[t][n]=new Float32Array(this.blockSize+h),this.inputBuffers[t][n].fill(0),this.inputBuffersHead[t][n]=this.inputBuffers[t][n].subarray(0,this.blockSize),this.inputBuffersToSend[t][n]=new Float32Array(this.blockSize)}allocateOutputChannels(t,e){this.outputBuffers[t]=new Array(e),this.outputBuffersToRetrieve[t]=new Array(e);for(let n=0;n<e;++n)this.outputBuffers[t][n]=new Float32Array(this.blockSize),this.outputBuffers[t][n].fill(0),this.outputBuffersToRetrieve[t][n]=new Float32Array(this.blockSize),this.outputBuffersToRetrieve[t][n].fill(0)}readAndSetInputs(t,e){if(e[0].length&&e[0][0].length==0){let r=this.nbInputs;for(let i=0;i<r;++i){let f=t[i];for(let a=0;a<f.length;a++)f[a].fill(0,this.blockSize+h-p)}return!1}let n=this.nbInputs;for(let r=0;r<n;++r){let i=t[r],f=e[r];for(let a=0;a<i.length;a++){let c=f[a];i[a].set(c,this.blockSize+h-p)}}return!0}writeOutputs(t){for(let e=0;e<this.nbInputs;++e)for(let n=0;n<this.inputBuffers[e].length;++n){let r=this.outputBuffers[e][n].subarray(0,p);t[e][n].set(r)}}static shiftBuffers(t){let e=t.length;for(let n=0;n<e;++n){let r=t[n];for(let i=0;i<r.length;i++)r[i].copyWithin(0,p)}}prepareInputBuffersToSend(){let t=this.nbInputs;for(let e=0;e<t;++e)for(let n=0;n<this.inputBuffers[e].length;++n)this.inputBuffersToSend[e][n].set(this.inputBuffersHead[e][n])}handleOutputBuffersToRetrieve(){for(let t=0;t<this.nbOutputs;++t)for(let e=0;e<this.outputBuffers[t].length;++e)for(let n=0;n<this.blockSize;++n)this.outputBuffers[t][e][n]+=this.outputBuffersToRetrieve[t][e][n]/this.nbOverlaps}process(t,e,n){return this.reallocateChannelsIfNeeded(t,e),this.readAndSetInputs(this.inputBuffers,t)&&(s.shiftBuffers(this.inputBuffers),(this.processCounter===this.processOverlap||this.processCounter===0)&&(this.prepareInputBuffersToSend(),this.processOLA(this.inputBuffersToSend,this.outputBuffersToRetrieve,n),this.handleOutputBuffersToRetrieve(),this.processCounter=0),this.writeOutputs(e),s.shiftBuffers(this.outputBuffers),this.processCounter++),!0}},B=class extends A{static get parameterDescriptors(){return[{name:"pitchFactor",defaultValue:1}]}async onmessage(t){(async()=>{try{WebAssembly.compile(t.data).then(async n=>{await I({module_or_path:n}),this.processed=!0,this.port.postMessage({wasm_init:!0})})}catch(n){console.error(n)}})()}constructor(t){t.processorOptions={blockSize:Z},super(t),this.port.onmessage=async e=>this.onmessage(e.data),this.port.onmessageerror=e=>{console.error("Error in PhaseVocoder",e)},this.processed=!1,this.fftSize=this.blockSize,this.timeCursor=0,this.lookUp=K(this.fftSize),this.hannWindow=q(this.blockSize)}processOLA(t,e,n){let r=n.pitchFactor[n.pitchFactor.length-1];for(let i=0;i<this.nbInputs;++i)for(let f=0;f<t[i].length;f++){let a=t[i][f],c=e[i][f];this.processed?c.set(S(a,this.hannWindow,this.lookUp,r,this.timeCursor)):c.set(a)}this.timeCursor+=h}};registerProcessor("phase-vocoder-processor",B);})();
